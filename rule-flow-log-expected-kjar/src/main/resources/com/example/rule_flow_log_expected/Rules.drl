package com.example.rule_flow_log_expected;

import java.util.List;
import java.util.ArrayList;

rule "rule for group1"
	dialect "mvel"
	ruleflow-group "group1"
	when
	    f: Fact(field2 == "field1")
	then
	    modify(f) {
	        setField1("modifided field1")
	    };
	    Result result = new Result();
	    List track = new ArrayList();
	    track.add("fired group1 for init");
	    result.setTrack(track);
	    result.setBizLogicResult("biz decision");
	    insert(result);
		System.out.println("Rule fired : [" + drools.getRule().getName()+"]");
end

rule "rule for group2"
	dialect "mvel"
	ruleflow-group "group2"
	when
		f: Fact(field2 == "field2")
		r: Result()
	then
	    modify(f) {
	        setField2("modifided field2")
	    }
	    r.getTrack().add("fired rule flow group2");
		System.out.println("Rule fired : [" + drools.getRule().getName()+"]");
end

rule "rule for group3"
	dialect "mvel"
	ruleflow-group "group3"
	when
		f: Fact(field3 == "field3")
		r: Result()
	then
	    modify(f) {
	        setField3("modifided field3")
	    }
	    r.getTrack().add("fired rule flow group3");
		System.out.println("Rule fired : [" + drools.getRule().getName()+"]");
end

rule "rule for group4"
	dialect "mvel"
	ruleflow-group "group4"
	when
		f: Fact(field4 == "field4")
		r: Result()
	then
	    modify(f) {
	        setField4("modifided field4")
	    }
	    r.getTrack().add("fired rule flow group3");
		System.out.println("Rule fired : [" + drools.getRule().getName()+"]");
end

rule "rule for log1"
	dialect "mvel"
	ruleflow-group "log1"
	when
        r : Result()
	then
	    r.getTrack().add("flag == yes");
		System.out.println("Rule fired : [" + drools.getRule().getName()+"]");
end

rule "rule for log2"
	dialect "mvel"
	ruleflow-group "log2"
	when
        r : Result()
	then
	    r.getTrack().add("flag == no");
		System.out.println("Rule fired : [" + drools.getRule().getName()+"]");
end
